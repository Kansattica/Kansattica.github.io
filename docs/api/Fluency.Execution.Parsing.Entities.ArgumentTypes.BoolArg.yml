### YamlMime:ManagedReference
items:
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
  commentId: T:Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
  id: BoolArg
  parent: Fluency.Execution.Parsing.Entities.ArgumentTypes
  children:
  - Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.ToString
  - Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.TryParseArg(System.String)
  - Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Type
  - Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Value
  langs:
  - csharp
  - vb
  name: BoolArg
  nameWithType: BoolArg
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
  type: Class
  source:
    remote:
      path: Execution/Parsing/Entities/FunctionGraph/ArgumentTypes/BoolArg.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: BoolArg
    path: ../Execution/Parsing/Entities/FunctionGraph/ArgumentTypes/BoolArg.cs
    startLine: 8
  assemblies:
  - Execution
  namespace: Fluency.Execution.Parsing.Entities.ArgumentTypes
  summary: "\nRepresents a boolean argument to a function.\n"
  example: []
  syntax:
    content: 'public class BoolArg : Argument'
    content.vb: >-
      Public Class BoolArg
          Inherits Argument
  inheritance:
  - System.Object
  - Fluency.Execution.Parsing.Entities.Argument
  inheritedMembers:
  - Fluency.Execution.Parsing.Entities.Argument.TryParse(System.String,Fluency.Execution.Parsing.Entities.Argument@)
  - Fluency.Execution.Parsing.Entities.Argument.GetAs``1
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Type
  commentId: P:Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Type
  id: Type
  parent: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: BoolArg.Type
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Type
  type: Property
  source:
    remote:
      path: Execution/Parsing/Entities/FunctionGraph/ArgumentTypes/BoolArg.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: Type
    path: ../Execution/Parsing/Entities/FunctionGraph/ArgumentTypes/BoolArg.cs
    startLine: 14
  assemblies:
  - Execution
  namespace: Fluency.Execution.Parsing.Entities.ArgumentTypes
  summary: "\nThe Fluency type this object is.\n"
  example: []
  syntax:
    content: public override FluencyType Type { get; }
    parameters: []
    return:
      type: Fluency.Common.FluencyType
      description: ''
    content.vb: Public Overrides ReadOnly Property Type As FluencyType
  overridden: Fluency.Execution.Parsing.Entities.Argument.Type
  overload: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Type*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.TryParseArg(System.String)
  commentId: M:Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.TryParseArg(System.String)
  id: TryParseArg(System.String)
  parent: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
  langs:
  - csharp
  - vb
  name: TryParseArg(String)
  nameWithType: BoolArg.TryParseArg(String)
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.TryParseArg(System.String)
  type: Method
  source:
    remote:
      path: Execution/Parsing/Entities/FunctionGraph/ArgumentTypes/BoolArg.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: TryParseArg
    path: ../Execution/Parsing/Entities/FunctionGraph/ArgumentTypes/BoolArg.cs
    startLine: 28
  assemblies:
  - Execution
  namespace: Fluency.Execution.Parsing.Entities.ArgumentTypes
  summary: "\nIf str represents a bool, make a BoolArg.  Otherwise, return null.\n"
  example: []
  syntax:
    content: public static BoolArg TryParseArg(string str)
    parameters:
    - id: str
      type: System.String
      description: ''
    return:
      type: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
      description: ''
    content.vb: Public Shared Function TryParseArg(str As String) As BoolArg
  overload: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.TryParseArg*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.ToString
  commentId: M:Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.ToString
  id: ToString
  parent: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BoolArg.ToString()
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.ToString()
  type: Method
  source:
    remote:
      path: Execution/Parsing/Entities/FunctionGraph/ArgumentTypes/BoolArg.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: ToString
    path: ../Execution/Parsing/Entities/FunctionGraph/ArgumentTypes/BoolArg.cs
    startLine: 41
  assemblies:
  - Execution
  namespace: Fluency.Execution.Parsing.Entities.ArgumentTypes
  summary: "\nReturn the stored bool as a string.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Value
  commentId: M:Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Value
  id: Value
  parent: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
  langs:
  - csharp
  - vb
  name: Value()
  nameWithType: BoolArg.Value()
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Value()
  type: Method
  source:
    remote:
      path: Execution/Parsing/Entities/FunctionGraph/ArgumentTypes/BoolArg.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: Value
    path: ../Execution/Parsing/Entities/FunctionGraph/ArgumentTypes/BoolArg.cs
    startLine: 50
  assemblies:
  - Execution
  namespace: Fluency.Execution.Parsing.Entities.ArgumentTypes
  summary: "\nGet the value this argument represents.\n"
  example: []
  syntax:
    content: protected override object Value()
    return:
      type: System.Object
      description: ''
    content.vb: Protected Overrides Function Value As Object
  overridden: Fluency.Execution.Parsing.Entities.Argument.Value
  overload: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Value*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes
  commentId: N:Fluency.Execution.Parsing.Entities.ArgumentTypes
  name: Fluency.Execution.Parsing.Entities.ArgumentTypes
  nameWithType: Fluency.Execution.Parsing.Entities.ArgumentTypes
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Fluency.Execution.Parsing.Entities.Argument
  commentId: T:Fluency.Execution.Parsing.Entities.Argument
  parent: Fluency.Execution.Parsing.Entities
  name: Argument
  nameWithType: Argument
  fullName: Fluency.Execution.Parsing.Entities.Argument
- uid: Fluency.Execution.Parsing.Entities.Argument.TryParse(System.String,Fluency.Execution.Parsing.Entities.Argument@)
  commentId: M:Fluency.Execution.Parsing.Entities.Argument.TryParse(System.String,Fluency.Execution.Parsing.Entities.Argument@)
  parent: Fluency.Execution.Parsing.Entities.Argument
  isExternal: true
  name: TryParse(String, Argument)
  nameWithType: Argument.TryParse(String, Argument)
  fullName: Fluency.Execution.Parsing.Entities.Argument.TryParse(System.String, Fluency.Execution.Parsing.Entities.Argument)
  spec.csharp:
  - uid: Fluency.Execution.Parsing.Entities.Argument.TryParse(System.String,Fluency.Execution.Parsing.Entities.Argument@)
    name: TryParse
    nameWithType: Argument.TryParse
    fullName: Fluency.Execution.Parsing.Entities.Argument.TryParse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fluency.Execution.Parsing.Entities.Argument
    name: Argument
    nameWithType: Argument
    fullName: Fluency.Execution.Parsing.Entities.Argument
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fluency.Execution.Parsing.Entities.Argument.TryParse(System.String,Fluency.Execution.Parsing.Entities.Argument@)
    name: TryParse
    nameWithType: Argument.TryParse
    fullName: Fluency.Execution.Parsing.Entities.Argument.TryParse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fluency.Execution.Parsing.Entities.Argument
    name: Argument
    nameWithType: Argument
    fullName: Fluency.Execution.Parsing.Entities.Argument
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Parsing.Entities.Argument.GetAs``1
  commentId: M:Fluency.Execution.Parsing.Entities.Argument.GetAs``1
  parent: Fluency.Execution.Parsing.Entities.Argument
  name: GetAs<T>()
  nameWithType: Argument.GetAs<T>()
  fullName: Fluency.Execution.Parsing.Entities.Argument.GetAs<T>()
  nameWithType.vb: Argument.GetAs(Of T)()
  fullName.vb: Fluency.Execution.Parsing.Entities.Argument.GetAs(Of T)()
  name.vb: GetAs(Of T)()
  spec.csharp:
  - uid: Fluency.Execution.Parsing.Entities.Argument.GetAs``1
    name: GetAs<T>
    nameWithType: Argument.GetAs<T>
    fullName: Fluency.Execution.Parsing.Entities.Argument.GetAs<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fluency.Execution.Parsing.Entities.Argument.GetAs``1
    name: GetAs(Of T)
    nameWithType: Argument.GetAs(Of T)
    fullName: Fluency.Execution.Parsing.Entities.Argument.GetAs(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fluency.Execution.Parsing.Entities
  commentId: N:Fluency.Execution.Parsing.Entities
  name: Fluency.Execution.Parsing.Entities
  nameWithType: Fluency.Execution.Parsing.Entities
  fullName: Fluency.Execution.Parsing.Entities
- uid: Fluency.Execution.Parsing.Entities.Argument.Type
  commentId: P:Fluency.Execution.Parsing.Entities.Argument.Type
  parent: Fluency.Execution.Parsing.Entities.Argument
  name: Type
  nameWithType: Argument.Type
  fullName: Fluency.Execution.Parsing.Entities.Argument.Type
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Type*
  commentId: Overload:Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Type
  name: Type
  nameWithType: BoolArg.Type
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Type
- uid: Fluency.Common.FluencyType
  commentId: T:Fluency.Common.FluencyType
  parent: Fluency.Common
  name: FluencyType
  nameWithType: FluencyType
  fullName: Fluency.Common.FluencyType
- uid: Fluency.Common
  commentId: N:Fluency.Common
  name: Fluency.Common
  nameWithType: Fluency.Common
  fullName: Fluency.Common
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.TryParseArg*
  commentId: Overload:Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.TryParseArg
  name: TryParseArg
  nameWithType: BoolArg.TryParseArg
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.TryParseArg
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
  commentId: T:Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
  parent: Fluency.Execution.Parsing.Entities.ArgumentTypes
  name: BoolArg
  nameWithType: BoolArg
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.ToString*
  commentId: Overload:Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.ToString
  name: ToString
  nameWithType: BoolArg.ToString
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.ToString
- uid: Fluency.Execution.Parsing.Entities.Argument.Value
  commentId: M:Fluency.Execution.Parsing.Entities.Argument.Value
  parent: Fluency.Execution.Parsing.Entities.Argument
  name: Value()
  nameWithType: Argument.Value()
  fullName: Fluency.Execution.Parsing.Entities.Argument.Value()
  spec.csharp:
  - uid: Fluency.Execution.Parsing.Entities.Argument.Value
    name: Value
    nameWithType: Argument.Value
    fullName: Fluency.Execution.Parsing.Entities.Argument.Value
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fluency.Execution.Parsing.Entities.Argument.Value
    name: Value
    nameWithType: Argument.Value
    fullName: Fluency.Execution.Parsing.Entities.Argument.Value
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Value*
  commentId: Overload:Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Value
  name: Value
  nameWithType: BoolArg.Value
  fullName: Fluency.Execution.Parsing.Entities.ArgumentTypes.BoolArg.Value
