### YamlMime:ManagedReference
items:
- uid: Fluency.Execution.Parsing.Parser
  commentId: T:Fluency.Execution.Parsing.Parser
  id: Parser
  parent: Fluency.Execution.Parsing
  children:
  - Fluency.Execution.Parsing.Parser.#ctor(System.Boolean,System.Boolean,System.Int32)
  - Fluency.Execution.Parsing.Parser.Parse(System.Collections.Generic.IEnumerable{System.String})
  - Fluency.Execution.Parsing.Parser.Register(Fluency.Execution.Parsing.ParsedCallback)
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: Parser
  fullName: Fluency.Execution.Parsing.Parser
  type: Class
  source:
    remote:
      path: Execution/Parsing/Parser.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: Parser
    path: ../Execution/Parsing/Parser.cs
    startLine: 15
  assemblies:
  - Execution
  namespace: Fluency.Execution.Parsing
  summary: "\nRepresents a Fluency parser.\n"
  example: []
  syntax:
    content: public class Parser
    content.vb: Public Class Parser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fluency.Execution.Parsing.Parser.#ctor(System.Boolean,System.Boolean,System.Int32)
  commentId: M:Fluency.Execution.Parsing.Parser.#ctor(System.Boolean,System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Int32)'
  parent: Fluency.Execution.Parsing.Parser
  langs:
  - csharp
  - vb
  name: Parser(Boolean, Boolean, Int32)
  nameWithType: Parser.Parser(Boolean, Boolean, Int32)
  fullName: Fluency.Execution.Parsing.Parser.Parser(System.Boolean, System.Boolean, System.Int32)
  type: Constructor
  source:
    remote:
      path: Execution/Parsing/Parser.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: .ctor
    path: ../Execution/Parsing/Parser.cs
    startLine: 27
  assemblies:
  - Execution
  namespace: Fluency.Execution.Parsing
  summary: "\nConstruct a new parser.\n"
  example: []
  syntax:
    content: public Parser(bool verbose = false, bool tabWarn = true, int tabWidth = 4)
    parameters:
    - id: verbose
      type: System.Boolean
      description: Be verbose.
    - id: tabWarn
      type: System.Boolean
      description: Whether to warn about tabs after text.
    - id: tabWidth
      type: System.Int32
      description: How wide to try to expand tabs to.
    content.vb: Public Sub New(verbose As Boolean = False, tabWarn As Boolean = True, tabWidth As Integer = 4)
  overload: Fluency.Execution.Parsing.Parser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fluency.Execution.Parsing.Parser.Parse(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Fluency.Execution.Parsing.Parser.Parse(System.Collections.Generic.IEnumerable{System.String})
  id: Parse(System.Collections.Generic.IEnumerable{System.String})
  parent: Fluency.Execution.Parsing.Parser
  langs:
  - csharp
  - vb
  name: Parse(IEnumerable<String>)
  nameWithType: Parser.Parse(IEnumerable<String>)
  fullName: Fluency.Execution.Parsing.Parser.Parse(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Execution/Parsing/Parser.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: Parse
    path: ../Execution/Parsing/Parser.cs
    startLine: 41
  assemblies:
  - Execution
  namespace: Fluency.Execution.Parsing
  summary: "\nParse an IEnumerable of lines, such as those from File.ReadAllLines.\n"
  example: []
  syntax:
    content: public IEnumerable<FunctionGraph> Parse(IEnumerable<string> lines)
    parameters:
    - id: lines
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{Fluency.Execution.Parsing.Entities.FunctionGraph.FunctionGraph}
      description: ''
    content.vb: Public Function Parse(lines As IEnumerable(Of String)) As IEnumerable(Of FunctionGraph)
  overload: Fluency.Execution.Parsing.Parser.Parse*
  nameWithType.vb: Parser.Parse(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fluency.Execution.Parsing.Parser.Parse(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Parse(IEnumerable(Of String))
- uid: Fluency.Execution.Parsing.Parser.Register(Fluency.Execution.Parsing.ParsedCallback)
  commentId: M:Fluency.Execution.Parsing.Parser.Register(Fluency.Execution.Parsing.ParsedCallback)
  id: Register(Fluency.Execution.Parsing.ParsedCallback)
  parent: Fluency.Execution.Parsing.Parser
  langs:
  - csharp
  - vb
  name: Register(ParsedCallback)
  nameWithType: Parser.Register(ParsedCallback)
  fullName: Fluency.Execution.Parsing.Parser.Register(Fluency.Execution.Parsing.ParsedCallback)
  type: Method
  source:
    remote:
      path: Execution/Parsing/Parser.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: Register
    path: ../Execution/Parsing/Parser.cs
    startLine: 185
  assemblies:
  - Execution
  namespace: Fluency.Execution.Parsing
  syntax:
    content: public void Register(ParsedCallback func)
    parameters:
    - id: func
      type: Fluency.Execution.Parsing.ParsedCallback
    content.vb: Public Sub Register(func As ParsedCallback)
  overload: Fluency.Execution.Parsing.Parser.Register*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fluency.Execution.Parsing
  commentId: N:Fluency.Execution.Parsing
  name: Fluency.Execution.Parsing
  nameWithType: Fluency.Execution.Parsing
  fullName: Fluency.Execution.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fluency.Execution.Parsing.Parser.#ctor*
  commentId: Overload:Fluency.Execution.Parsing.Parser.#ctor
  name: Parser
  nameWithType: Parser.Parser
  fullName: Fluency.Execution.Parsing.Parser.Parser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fluency.Execution.Parsing.Parser.Parse*
  commentId: Overload:Fluency.Execution.Parsing.Parser.Parse
  name: Parse
  nameWithType: Parser.Parse
  fullName: Fluency.Execution.Parsing.Parser.Parse
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Fluency.Execution.Parsing.Entities.FunctionGraph.FunctionGraph}
  commentId: T:System.Collections.Generic.IEnumerable{Fluency.Execution.Parsing.Entities.FunctionGraph.FunctionGraph}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FunctionGraph>
  nameWithType: IEnumerable<FunctionGraph>
  fullName: System.Collections.Generic.IEnumerable<Fluency.Execution.Parsing.Entities.FunctionGraph.FunctionGraph>
  nameWithType.vb: IEnumerable(Of FunctionGraph)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Fluency.Execution.Parsing.Entities.FunctionGraph.FunctionGraph)
  name.vb: IEnumerable(Of FunctionGraph)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fluency.Execution.Parsing.Entities.FunctionGraph.FunctionGraph
    name: FunctionGraph
    nameWithType: FunctionGraph
    fullName: Fluency.Execution.Parsing.Entities.FunctionGraph.FunctionGraph
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fluency.Execution.Parsing.Entities.FunctionGraph.FunctionGraph
    name: FunctionGraph
    nameWithType: FunctionGraph
    fullName: Fluency.Execution.Parsing.Entities.FunctionGraph.FunctionGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Fluency.Execution.Parsing.Parser.Register*
  commentId: Overload:Fluency.Execution.Parsing.Parser.Register
  name: Register
  nameWithType: Parser.Register
  fullName: Fluency.Execution.Parsing.Parser.Register
- uid: Fluency.Execution.Parsing.ParsedCallback
  commentId: T:Fluency.Execution.Parsing.ParsedCallback
  parent: Fluency.Execution.Parsing
  name: ParsedCallback
  nameWithType: ParsedCallback
  fullName: Fluency.Execution.Parsing.ParsedCallback
