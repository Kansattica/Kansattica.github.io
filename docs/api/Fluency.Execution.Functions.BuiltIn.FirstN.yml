### YamlMime:ManagedReference
items:
- uid: Fluency.Execution.Functions.BuiltIn.FirstN
  commentId: T:Fluency.Execution.Functions.BuiltIn.FirstN
  id: FirstN
  parent: Fluency.Execution.Functions.BuiltIn
  children:
  - Fluency.Execution.Functions.BuiltIn.FirstN.#ctor(Fluency.Execution.Functions.Value[])
  - Fluency.Execution.Functions.BuiltIn.FirstN.Bottom
  - Fluency.Execution.Functions.BuiltIn.FirstN.Name
  - Fluency.Execution.Functions.BuiltIn.FirstN.toAllow
  - Fluency.Execution.Functions.BuiltIn.FirstN.Top
  - Fluency.Execution.Functions.BuiltIn.FirstN.TopInput
  langs:
  - csharp
  - vb
  name: FirstN
  nameWithType: FirstN
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN
  type: Class
  source:
    remote:
      path: Execution/Execution/Functions/BuiltIn/First.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: FirstN
    path: ../Execution/Execution/Functions/BuiltIn/First.cs
    startLine: 12
  assemblies:
  - Execution
  namespace: Fluency.Execution.Functions.BuiltIn
  summary: "\nReturns the first N values, then puts the rest on the bottom. If no arguments given, N is read from the top pipeline.\n"
  example: []
  syntax:
    content: 'public class FirstN : ITopIn, ITopOut, IBottomOut, IFunction'
    content.vb: >-
      Public Class FirstN
          Implements ITopIn, ITopOut, IBottomOut, IFunction
  inheritance:
  - System.Object
  derivedClasses:
  - Fluency.Execution.Functions.BuiltIn.First
  implements:
  - Fluency.Execution.Functions.ITopIn
  - Fluency.Execution.Functions.ITopOut
  - Fluency.Execution.Functions.IBottomOut
  - Fluency.Execution.Functions.IFunction
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Fluency.Execution.Functions.IFunction.Fluency.Execution.Extensions.ExecutionExtensions.Is``1(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.Name
  commentId: P:Fluency.Execution.Functions.BuiltIn.FirstN.Name
  id: Name
  parent: Fluency.Execution.Functions.BuiltIn.FirstN
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FirstN.Name
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.Name
  type: Property
  source:
    remote:
      path: Execution/Execution/Functions/BuiltIn/First.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: Name
    path: ../Execution/Execution/Functions/BuiltIn/First.cs
    startLine: 14
  assemblies:
  - Execution
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: public virtual string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Name As String
  overload: Fluency.Execution.Functions.BuiltIn.FirstN.Name*
  implements:
  - Fluency.Execution.Functions.IFunction.Name
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.TopInput
  commentId: P:Fluency.Execution.Functions.BuiltIn.FirstN.TopInput
  id: TopInput
  parent: Fluency.Execution.Functions.BuiltIn.FirstN
  langs:
  - csharp
  - vb
  name: TopInput
  nameWithType: FirstN.TopInput
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.TopInput
  type: Property
  source:
    remote:
      path: Execution/Execution/Functions/BuiltIn/First.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: TopInput
    path: ../Execution/Execution/Functions/BuiltIn/First.cs
    startLine: 16
  assemblies:
  - Execution
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: public GetNext TopInput { set; }
    parameters: []
    return:
      type: Fluency.Execution.Functions.GetNext
    content.vb: Public WriteOnly Property TopInput As GetNext
  overload: Fluency.Execution.Functions.BuiltIn.FirstN.TopInput*
  implements:
  - Fluency.Execution.Functions.ITopIn.TopInput
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.toAllow
  commentId: F:Fluency.Execution.Functions.BuiltIn.FirstN.toAllow
  id: toAllow
  parent: Fluency.Execution.Functions.BuiltIn.FirstN
  langs:
  - csharp
  - vb
  name: toAllow
  nameWithType: FirstN.toAllow
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.toAllow
  type: Field
  source:
    remote:
      path: Execution/Execution/Functions/BuiltIn/First.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: toAllow
    path: ../Execution/Execution/Functions/BuiltIn/First.cs
    startLine: 18
  assemblies:
  - Execution
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: protected int? toAllow
    return:
      type: System.Nullable{System.Int32}
    content.vb: Protected toAllow As Integer?
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.#ctor(Fluency.Execution.Functions.Value[])
  commentId: M:Fluency.Execution.Functions.BuiltIn.FirstN.#ctor(Fluency.Execution.Functions.Value[])
  id: '#ctor(Fluency.Execution.Functions.Value[])'
  parent: Fluency.Execution.Functions.BuiltIn.FirstN
  langs:
  - csharp
  - vb
  name: FirstN(Value[])
  nameWithType: FirstN.FirstN(Value[])
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.FirstN(Fluency.Execution.Functions.Value[])
  type: Constructor
  source:
    remote:
      path: Execution/Execution/Functions/BuiltIn/First.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: .ctor
    path: ../Execution/Execution/Functions/BuiltIn/First.cs
    startLine: 19
  assemblies:
  - Execution
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: public FirstN(Value[] args)
    parameters:
    - id: args
      type: Fluency.Execution.Functions.Value[]
    content.vb: Public Sub New(args As Value())
  overload: Fluency.Execution.Functions.BuiltIn.FirstN.#ctor*
  nameWithType.vb: FirstN.FirstN(Value())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fluency.Execution.Functions.BuiltIn.FirstN.FirstN(Fluency.Execution.Functions.Value())
  name.vb: FirstN(Value())
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.Bottom
  commentId: M:Fluency.Execution.Functions.BuiltIn.FirstN.Bottom
  id: Bottom
  parent: Fluency.Execution.Functions.BuiltIn.FirstN
  langs:
  - csharp
  - vb
  name: Bottom()
  nameWithType: FirstN.Bottom()
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.Bottom()
  type: Method
  source:
    remote:
      path: Execution/Execution/Functions/BuiltIn/First.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: Bottom
    path: ../Execution/Execution/Functions/BuiltIn/First.cs
    startLine: 43
  assemblies:
  - Execution
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: public Value Bottom()
    return:
      type: Fluency.Execution.Functions.Value
    content.vb: Public Function Bottom As Value
  overload: Fluency.Execution.Functions.BuiltIn.FirstN.Bottom*
  implements:
  - Fluency.Execution.Functions.IBottomOut.Bottom
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.Top
  commentId: M:Fluency.Execution.Functions.BuiltIn.FirstN.Top
  id: Top
  parent: Fluency.Execution.Functions.BuiltIn.FirstN
  langs:
  - csharp
  - vb
  name: Top()
  nameWithType: FirstN.Top()
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.Top()
  type: Method
  source:
    remote:
      path: Execution/Execution/Functions/BuiltIn/First.cs
      branch: 0244abd8aff50a2eb5c9fdca9193885cff638193
      repo: https://github.com/Kansattica/Fluency.git
    id: Top
    path: ../Execution/Execution/Functions/BuiltIn/First.cs
    startLine: 64
  assemblies:
  - Execution
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: public Value Top()
    return:
      type: Fluency.Execution.Functions.Value
    content.vb: Public Function Top As Value
  overload: Fluency.Execution.Functions.BuiltIn.FirstN.Top*
  implements:
  - Fluency.Execution.Functions.ITopOut.Top
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fluency.Execution.Functions.BuiltIn
  commentId: N:Fluency.Execution.Functions.BuiltIn
  name: Fluency.Execution.Functions.BuiltIn
  nameWithType: Fluency.Execution.Functions.BuiltIn
  fullName: Fluency.Execution.Functions.BuiltIn
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Fluency.Execution.Functions.ITopIn
  commentId: T:Fluency.Execution.Functions.ITopIn
  parent: Fluency.Execution.Functions
  name: ITopIn
  nameWithType: ITopIn
  fullName: Fluency.Execution.Functions.ITopIn
- uid: Fluency.Execution.Functions.ITopOut
  commentId: T:Fluency.Execution.Functions.ITopOut
  parent: Fluency.Execution.Functions
  name: ITopOut
  nameWithType: ITopOut
  fullName: Fluency.Execution.Functions.ITopOut
- uid: Fluency.Execution.Functions.IBottomOut
  commentId: T:Fluency.Execution.Functions.IBottomOut
  parent: Fluency.Execution.Functions
  name: IBottomOut
  nameWithType: IBottomOut
  fullName: Fluency.Execution.Functions.IBottomOut
- uid: Fluency.Execution.Functions.IFunction
  commentId: T:Fluency.Execution.Functions.IFunction
  parent: Fluency.Execution.Functions
  name: IFunction
  nameWithType: IFunction
  fullName: Fluency.Execution.Functions.IFunction
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Functions.IFunction.Fluency.Execution.Extensions.ExecutionExtensions.Is``1(System.String)
  commentId: M:Fluency.Execution.Extensions.ExecutionExtensions.Is``1(Fluency.Execution.Functions.IFunction,System.String)
  parent: Fluency.Execution.Extensions.ExecutionExtensions
  definition: Fluency.Execution.Extensions.ExecutionExtensions.Is``1(Fluency.Execution.Functions.IFunction,System.String)
  name: Is<T>(String)
  nameWithType: ExecutionExtensions.Is<T>(String)
  fullName: Fluency.Execution.Extensions.ExecutionExtensions.Is<T>(System.String)
  nameWithType.vb: ExecutionExtensions.Is(Of T)(String)
  fullName.vb: Fluency.Execution.Extensions.ExecutionExtensions.Is(Of T)(System.String)
  name.vb: Is(Of T)(String)
  spec.csharp:
  - uid: Fluency.Execution.Extensions.ExecutionExtensions.Is``1(System.String)
    name: Is<T>
    nameWithType: ExecutionExtensions.Is<T>
    fullName: Fluency.Execution.Extensions.ExecutionExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fluency.Execution.Extensions.ExecutionExtensions.Is``1(System.String)
    name: Is(Of T)
    nameWithType: ExecutionExtensions.Is(Of T)
    fullName: Fluency.Execution.Extensions.ExecutionExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fluency.Execution.Functions
  commentId: N:Fluency.Execution.Functions
  name: Fluency.Execution.Functions
  nameWithType: Fluency.Execution.Functions
  fullName: Fluency.Execution.Functions
- uid: Fluency.Execution.Extensions.ExecutionExtensions.Is``1(Fluency.Execution.Functions.IFunction,System.String)
  commentId: M:Fluency.Execution.Extensions.ExecutionExtensions.Is``1(Fluency.Execution.Functions.IFunction,System.String)
  isExternal: true
  name: Is<T>(IFunction, String)
  nameWithType: ExecutionExtensions.Is<T>(IFunction, String)
  fullName: Fluency.Execution.Extensions.ExecutionExtensions.Is<T>(Fluency.Execution.Functions.IFunction, System.String)
  nameWithType.vb: ExecutionExtensions.Is(Of T)(IFunction, String)
  fullName.vb: Fluency.Execution.Extensions.ExecutionExtensions.Is(Of T)(Fluency.Execution.Functions.IFunction, System.String)
  name.vb: Is(Of T)(IFunction, String)
  spec.csharp:
  - uid: Fluency.Execution.Extensions.ExecutionExtensions.Is``1(Fluency.Execution.Functions.IFunction,System.String)
    name: Is<T>
    nameWithType: ExecutionExtensions.Is<T>
    fullName: Fluency.Execution.Extensions.ExecutionExtensions.Is<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fluency.Execution.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Fluency.Execution.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fluency.Execution.Extensions.ExecutionExtensions.Is``1(Fluency.Execution.Functions.IFunction,System.String)
    name: Is(Of T)
    nameWithType: ExecutionExtensions.Is(Of T)
    fullName: Fluency.Execution.Extensions.ExecutionExtensions.Is(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fluency.Execution.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Fluency.Execution.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Extensions.ExecutionExtensions
  commentId: T:Fluency.Execution.Extensions.ExecutionExtensions
  parent: Fluency.Execution.Extensions
  name: ExecutionExtensions
  nameWithType: ExecutionExtensions
  fullName: Fluency.Execution.Extensions.ExecutionExtensions
- uid: Fluency.Execution.Extensions
  commentId: N:Fluency.Execution.Extensions
  name: Fluency.Execution.Extensions
  nameWithType: Fluency.Execution.Extensions
  fullName: Fluency.Execution.Extensions
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.Name*
  commentId: Overload:Fluency.Execution.Functions.BuiltIn.FirstN.Name
  name: Name
  nameWithType: FirstN.Name
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.Name
- uid: Fluency.Execution.Functions.IFunction.Name
  commentId: P:Fluency.Execution.Functions.IFunction.Name
  parent: Fluency.Execution.Functions.IFunction
  name: Name
  nameWithType: IFunction.Name
  fullName: Fluency.Execution.Functions.IFunction.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.TopInput*
  commentId: Overload:Fluency.Execution.Functions.BuiltIn.FirstN.TopInput
  name: TopInput
  nameWithType: FirstN.TopInput
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.TopInput
- uid: Fluency.Execution.Functions.ITopIn.TopInput
  commentId: P:Fluency.Execution.Functions.ITopIn.TopInput
  parent: Fluency.Execution.Functions.ITopIn
  name: TopInput
  nameWithType: ITopIn.TopInput
  fullName: Fluency.Execution.Functions.ITopIn.TopInput
- uid: Fluency.Execution.Functions.GetNext
  commentId: T:Fluency.Execution.Functions.GetNext
  parent: Fluency.Execution.Functions
  name: GetNext
  nameWithType: GetNext
  fullName: Fluency.Execution.Functions.GetNext
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.#ctor*
  commentId: Overload:Fluency.Execution.Functions.BuiltIn.FirstN.#ctor
  name: FirstN
  nameWithType: FirstN.FirstN
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.FirstN
- uid: Fluency.Execution.Functions.Value[]
  isExternal: true
  name: Value[]
  nameWithType: Value[]
  fullName: Fluency.Execution.Functions.Value[]
  nameWithType.vb: Value()
  fullName.vb: Fluency.Execution.Functions.Value()
  name.vb: Value()
  spec.csharp:
  - uid: Fluency.Execution.Functions.Value
    name: Value
    nameWithType: Value
    fullName: Fluency.Execution.Functions.Value
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Fluency.Execution.Functions.Value
    name: Value
    nameWithType: Value
    fullName: Fluency.Execution.Functions.Value
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.Bottom*
  commentId: Overload:Fluency.Execution.Functions.BuiltIn.FirstN.Bottom
  name: Bottom
  nameWithType: FirstN.Bottom
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.Bottom
- uid: Fluency.Execution.Functions.IBottomOut.Bottom
  commentId: M:Fluency.Execution.Functions.IBottomOut.Bottom
  parent: Fluency.Execution.Functions.IBottomOut
  name: Bottom()
  nameWithType: IBottomOut.Bottom()
  fullName: Fluency.Execution.Functions.IBottomOut.Bottom()
  spec.csharp:
  - uid: Fluency.Execution.Functions.IBottomOut.Bottom
    name: Bottom
    nameWithType: IBottomOut.Bottom
    fullName: Fluency.Execution.Functions.IBottomOut.Bottom
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fluency.Execution.Functions.IBottomOut.Bottom
    name: Bottom
    nameWithType: IBottomOut.Bottom
    fullName: Fluency.Execution.Functions.IBottomOut.Bottom
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Functions.Value
  commentId: T:Fluency.Execution.Functions.Value
  parent: Fluency.Execution.Functions
  name: Value
  nameWithType: Value
  fullName: Fluency.Execution.Functions.Value
- uid: Fluency.Execution.Functions.BuiltIn.FirstN.Top*
  commentId: Overload:Fluency.Execution.Functions.BuiltIn.FirstN.Top
  name: Top
  nameWithType: FirstN.Top
  fullName: Fluency.Execution.Functions.BuiltIn.FirstN.Top
- uid: Fluency.Execution.Functions.ITopOut.Top
  commentId: M:Fluency.Execution.Functions.ITopOut.Top
  parent: Fluency.Execution.Functions.ITopOut
  name: Top()
  nameWithType: ITopOut.Top()
  fullName: Fluency.Execution.Functions.ITopOut.Top()
  spec.csharp:
  - uid: Fluency.Execution.Functions.ITopOut.Top
    name: Top
    nameWithType: ITopOut.Top
    fullName: Fluency.Execution.Functions.ITopOut.Top
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fluency.Execution.Functions.ITopOut.Top
    name: Top
    nameWithType: ITopOut.Top
    fullName: Fluency.Execution.Functions.ITopOut.Top
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
