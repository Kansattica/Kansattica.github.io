### YamlMime:ManagedReference
items:
- uid: Fluency.Execution.Parsing.GroupWhileAction
  commentId: T:Fluency.Execution.Parsing.GroupWhileAction
  id: GroupWhileAction
  parent: Fluency.Execution.Parsing
  children:
  - Fluency.Execution.Parsing.GroupWhileAction.In
  - Fluency.Execution.Parsing.GroupWhileAction.LeaveExclude
  - Fluency.Execution.Parsing.GroupWhileAction.LeaveInclude
  - Fluency.Execution.Parsing.GroupWhileAction.StillOut
  langs:
  - csharp
  - vb
  name: GroupWhileAction
  nameWithType: GroupWhileAction
  fullName: Fluency.Execution.Parsing.GroupWhileAction
  type: Enum
  source:
    id: GroupWhileAction
    path: ''
    startLine: 2122
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing
  summary: "\nActions you can instruct <xref href=\"Fluency.Execution.Parsing.ParseExtensions.GroupWhile%60%601(IEnumerable%7b%60%600%7d%2cFunc%7b%60%600%2cSystem.Boolean%2cFluency.Execution.Parsing.GroupWhileAction%7d)\" data-throw-if-not-resolved=\"false\"></xref> to take from its callback.\n"
  example: []
  syntax:
    content: public enum GroupWhileAction
    content.vb: Public Enum GroupWhileAction
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Fluency.Execution.Parsing.GroupWhileAction.In
  commentId: F:Fluency.Execution.Parsing.GroupWhileAction.In
  id: In
  parent: Fluency.Execution.Parsing.GroupWhileAction
  langs:
  - csharp
  - vb
  name: In
  nameWithType: GroupWhileAction.In
  fullName: Fluency.Execution.Parsing.GroupWhileAction.In
  type: Field
  source:
    id: In
    path: ''
    startLine: 2128
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing
  summary: "\nAdd the current item into the group, starting a new one if necessary.\n"
  example: []
  syntax:
    content: In = 0
    return:
      type: Fluency.Execution.Parsing.GroupWhileAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fluency.Execution.Parsing.GroupWhileAction.StillOut
  commentId: F:Fluency.Execution.Parsing.GroupWhileAction.StillOut
  id: StillOut
  parent: Fluency.Execution.Parsing.GroupWhileAction
  langs:
  - csharp
  - vb
  name: StillOut
  nameWithType: GroupWhileAction.StillOut
  fullName: Fluency.Execution.Parsing.GroupWhileAction.StillOut
  type: Field
  source:
    id: StillOut
    path: ''
    startLine: 2133
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing
  summary: "\nWe&apos;re not making a group, and this element should stay out of the group. Only return this if pickAction was passed false.\n"
  example: []
  syntax:
    content: StillOut = 1
    return:
      type: Fluency.Execution.Parsing.GroupWhileAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fluency.Execution.Parsing.GroupWhileAction.LeaveInclude
  commentId: F:Fluency.Execution.Parsing.GroupWhileAction.LeaveInclude
  id: LeaveInclude
  parent: Fluency.Execution.Parsing.GroupWhileAction
  langs:
  - csharp
  - vb
  name: LeaveInclude
  nameWithType: GroupWhileAction.LeaveInclude
  fullName: Fluency.Execution.Parsing.GroupWhileAction.LeaveInclude
  type: Field
  source:
    id: LeaveInclude
    path: ''
    startLine: 2138
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing
  summary: "\nFinish the current group and put this item in it.\n"
  example: []
  syntax:
    content: LeaveInclude = 2
    return:
      type: Fluency.Execution.Parsing.GroupWhileAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fluency.Execution.Parsing.GroupWhileAction.LeaveExclude
  commentId: F:Fluency.Execution.Parsing.GroupWhileAction.LeaveExclude
  id: LeaveExclude
  parent: Fluency.Execution.Parsing.GroupWhileAction
  langs:
  - csharp
  - vb
  name: LeaveExclude
  nameWithType: GroupWhileAction.LeaveExclude
  fullName: Fluency.Execution.Parsing.GroupWhileAction.LeaveExclude
  type: Field
  source:
    id: LeaveExclude
    path: ''
    startLine: 2143
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing
  summary: "\nFinish the current group and don&apos;t put this item in it.\n"
  example: []
  syntax:
    content: LeaveExclude = 3
    return:
      type: Fluency.Execution.Parsing.GroupWhileAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Fluency.Execution.Parsing.ParseExtensions.GroupWhile``1(IEnumerable{``0},Func{``0,System.Boolean,Fluency.Execution.Parsing.GroupWhileAction})
  commentId: M:Fluency.Execution.Parsing.ParseExtensions.GroupWhile``1(IEnumerable{``0},Func{``0,System.Boolean,Fluency.Execution.Parsing.GroupWhileAction})
  isExternal: true
- uid: Fluency.Execution.Parsing
  commentId: N:Fluency.Execution.Parsing
  name: Fluency.Execution.Parsing
  nameWithType: Fluency.Execution.Parsing
  fullName: Fluency.Execution.Parsing
- uid: Fluency.Execution.Parsing.GroupWhileAction
  commentId: T:Fluency.Execution.Parsing.GroupWhileAction
  parent: Fluency.Execution.Parsing
  name: GroupWhileAction
  nameWithType: GroupWhileAction
  fullName: Fluency.Execution.Parsing.GroupWhileAction
