### YamlMime:ManagedReference
items:
- uid: Fluency.Execution.Parsing.Entities.Line
  commentId: T:Fluency.Execution.Parsing.Entities.Line
  id: Line
  parent: Fluency.Execution.Parsing.Entities
  children:
  - Fluency.Execution.Parsing.Entities.Line.Contents
  - Fluency.Execution.Parsing.Entities.Line.Create(System.String,System.Int32)
  - Fluency.Execution.Parsing.Entities.Line.Number
  - Fluency.Execution.Parsing.Entities.Line.ToString
  langs:
  - csharp
  - vb
  name: Line
  nameWithType: Line
  fullName: Fluency.Execution.Parsing.Entities.Line
  type: Class
  source:
    id: Line
    path: ''
    startLine: 2481
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Entities
  summary: "\nRepresents a raw line from the source file.\n"
  example: []
  syntax:
    content: public class Line
    content.vb: Public Class Line
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fluency.Execution.Parsing.Entities.Line.Number
  commentId: P:Fluency.Execution.Parsing.Entities.Line.Number
  id: Number
  parent: Fluency.Execution.Parsing.Entities.Line
  langs:
  - csharp
  - vb
  name: Number
  nameWithType: Line.Number
  fullName: Fluency.Execution.Parsing.Entities.Line.Number
  type: Property
  source:
    id: Number
    path: ''
    startLine: 2487
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Entities
  summary: "\nThe one-indexed line number.\n"
  example: []
  syntax:
    content: public int Number { get; }
    parameters: []
    return:
      type: System.Int32
      description: ''
    content.vb: Public ReadOnly Property Number As Integer
  overload: Fluency.Execution.Parsing.Entities.Line.Number*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fluency.Execution.Parsing.Entities.Line.Contents
  commentId: P:Fluency.Execution.Parsing.Entities.Line.Contents
  id: Contents
  parent: Fluency.Execution.Parsing.Entities.Line
  langs:
  - csharp
  - vb
  name: Contents
  nameWithType: Line.Contents
  fullName: Fluency.Execution.Parsing.Entities.Line.Contents
  type: Property
  source:
    id: Contents
    path: ''
    startLine: 2493
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Entities
  summary: "\nThe contents of the string.\n"
  example: []
  syntax:
    content: public string Contents { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public ReadOnly Property Contents As String
  overload: Fluency.Execution.Parsing.Entities.Line.Contents*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fluency.Execution.Parsing.Entities.Line.Create(System.String,System.Int32)
  commentId: M:Fluency.Execution.Parsing.Entities.Line.Create(System.String,System.Int32)
  id: Create(System.String,System.Int32)
  parent: Fluency.Execution.Parsing.Entities.Line
  langs:
  - csharp
  - vb
  name: Create(String, Int32)
  nameWithType: Line.Create(String, Int32)
  fullName: Fluency.Execution.Parsing.Entities.Line.Create(System.String, System.Int32)
  type: Method
  source:
    id: Create
    path: ''
    startLine: 2503
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Entities
  summary: "\nCreate a line. This is a factory function so you can give it to Linq&apos;s .Select and have it do the indexing for you.\n"
  example: []
  syntax:
    content: public static Line Create(string contents, int number)
    parameters:
    - id: contents
      type: System.String
      description: ''
    - id: number
      type: System.Int32
      description: The zero-based index. The number one higher than this will be stored.
    return:
      type: Fluency.Execution.Parsing.Entities.Line
      description: ''
    content.vb: Public Shared Function Create(contents As String, number As Integer) As Line
  overload: Fluency.Execution.Parsing.Entities.Line.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fluency.Execution.Parsing.Entities.Line.ToString
  commentId: M:Fluency.Execution.Parsing.Entities.Line.ToString
  id: ToString
  parent: Fluency.Execution.Parsing.Entities.Line
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Line.ToString()
  fullName: Fluency.Execution.Parsing.Entities.Line.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 2516
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Entities
  summary: "\nReturn lineNumber: Contents\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Fluency.Execution.Parsing.Entities.Line.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Fluency.Execution.Parsing.Entities
  commentId: N:Fluency.Execution.Parsing.Entities
  name: Fluency.Execution.Parsing.Entities
  nameWithType: Fluency.Execution.Parsing.Entities
  fullName: Fluency.Execution.Parsing.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fluency.Execution.Parsing.Entities.Line.Number*
  commentId: Overload:Fluency.Execution.Parsing.Entities.Line.Number
  name: Number
  nameWithType: Line.Number
  fullName: Fluency.Execution.Parsing.Entities.Line.Number
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fluency.Execution.Parsing.Entities.Line.Contents*
  commentId: Overload:Fluency.Execution.Parsing.Entities.Line.Contents
  name: Contents
  nameWithType: Line.Contents
  fullName: Fluency.Execution.Parsing.Entities.Line.Contents
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fluency.Execution.Parsing.Entities.Line.Create*
  commentId: Overload:Fluency.Execution.Parsing.Entities.Line.Create
  name: Create
  nameWithType: Line.Create
  fullName: Fluency.Execution.Parsing.Entities.Line.Create
- uid: Fluency.Execution.Parsing.Entities.Line
  commentId: T:Fluency.Execution.Parsing.Entities.Line
  parent: Fluency.Execution.Parsing.Entities
  name: Line
  nameWithType: Line
  fullName: Fluency.Execution.Parsing.Entities.Line
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Parsing.Entities.Line.ToString*
  commentId: Overload:Fluency.Execution.Parsing.Entities.Line.ToString
  name: ToString
  nameWithType: Line.ToString
  fullName: Fluency.Execution.Parsing.Entities.Line.ToString
