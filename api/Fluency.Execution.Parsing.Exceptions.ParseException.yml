### YamlMime:ManagedReference
items:
- uid: Fluency.Execution.Parsing.Exceptions.ParseException
  commentId: T:Fluency.Execution.Parsing.Exceptions.ParseException
  id: ParseException
  parent: Fluency.Execution.Parsing.Exceptions
  children:
  - Fluency.Execution.Parsing.Exceptions.ParseException.#ctor(System.String)
  - Fluency.Execution.Parsing.Exceptions.ParseException.#ctor(System.String,Exception)
  - Fluency.Execution.Parsing.Exceptions.ParseException.#ctor(System.String,System.Object[])
  - Fluency.Execution.Parsing.Exceptions.ParseException.FunctionToken
  - Fluency.Execution.Parsing.Exceptions.ParseException.LineNumber
  - Fluency.Execution.Parsing.Exceptions.ParseException.Message
  - Fluency.Execution.Parsing.Exceptions.ParseException.Position
  - Fluency.Execution.Parsing.Exceptions.ParseException.Range
  - Fluency.Execution.Parsing.Exceptions.ParseException.Snippet
  - Fluency.Execution.Parsing.Exceptions.ParseException.ToString
  langs:
  - csharp
  - vb
  name: ParseException
  nameWithType: ParseException
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException
  type: Class
  source:
    id: ParseException
    path: ''
    startLine: 1850
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  summary: "\nRepresents an error that ocurred while parsing the source code.\n"
  example: []
  syntax:
    content: 'public class ParseException : Exception'
    content.vb: >-
      Public Class ParseException
          Inherits Exception
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.LineNumber
  commentId: P:Fluency.Execution.Parsing.Exceptions.ParseException.LineNumber
  id: LineNumber
  parent: Fluency.Execution.Parsing.Exceptions.ParseException
  langs:
  - csharp
  - vb
  name: LineNumber
  nameWithType: ParseException.LineNumber
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.LineNumber
  type: Property
  source:
    id: LineNumber
    path: ''
    startLine: 1852
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  syntax:
    content: public int LineNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LineNumber As Integer
  overload: Fluency.Execution.Parsing.Exceptions.ParseException.LineNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.Position
  commentId: P:Fluency.Execution.Parsing.Exceptions.ParseException.Position
  id: Position
  parent: Fluency.Execution.Parsing.Exceptions.ParseException
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ParseException.Position
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.Position
  type: Property
  source:
    id: Position
    path: ''
    startLine: 1853
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  syntax:
    content: public int? Position { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Position As Integer?
  overload: Fluency.Execution.Parsing.Exceptions.ParseException.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.Range
  commentId: P:Fluency.Execution.Parsing.Exceptions.ParseException.Range
  id: Range
  parent: Fluency.Execution.Parsing.Exceptions.ParseException
  langs:
  - csharp
  - vb
  name: Range
  nameWithType: ParseException.Range
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.Range
  type: Property
  source:
    id: Range
    path: ''
    startLine: 1854
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  syntax:
    content: public Range Range { get; set; }
    parameters: []
    return:
      type: Range
    content.vb: Public Property Range As Range
  overload: Fluency.Execution.Parsing.Exceptions.ParseException.Range*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.Snippet
  commentId: P:Fluency.Execution.Parsing.Exceptions.ParseException.Snippet
  id: Snippet
  parent: Fluency.Execution.Parsing.Exceptions.ParseException
  langs:
  - csharp
  - vb
  name: Snippet
  nameWithType: ParseException.Snippet
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.Snippet
  type: Property
  source:
    id: Snippet
    path: ''
    startLine: 1855
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  syntax:
    content: public string Snippet { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Snippet As String
  overload: Fluency.Execution.Parsing.Exceptions.ParseException.Snippet*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.FunctionToken
  commentId: P:Fluency.Execution.Parsing.Exceptions.ParseException.FunctionToken
  id: FunctionToken
  parent: Fluency.Execution.Parsing.Exceptions.ParseException
  langs:
  - csharp
  - vb
  name: FunctionToken
  nameWithType: ParseException.FunctionToken
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.FunctionToken
  type: Property
  source:
    id: FunctionToken
    path: ''
    startLine: 1857
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  syntax:
    content: public FunctionToken FunctionToken { set; }
    parameters: []
    return:
      type: FunctionToken
    content.vb: Public WriteOnly Property FunctionToken As FunctionToken
  overload: Fluency.Execution.Parsing.Exceptions.ParseException.FunctionToken*
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.#ctor(System.String)
  commentId: M:Fluency.Execution.Parsing.Exceptions.ParseException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Fluency.Execution.Parsing.Exceptions.ParseException
  langs:
  - csharp
  - vb
  name: ParseException(String)
  nameWithType: ParseException.ParseException(String)
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.ParseException(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1859
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  syntax:
    content: public ParseException(string message)
    parameters:
    - id: message
      type: System.String
    content.vb: Public Sub New(message As String)
  overload: Fluency.Execution.Parsing.Exceptions.ParseException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.#ctor(System.String,System.Object[])
  commentId: M:Fluency.Execution.Parsing.Exceptions.ParseException.#ctor(System.String,System.Object[])
  id: '#ctor(System.String,System.Object[])'
  parent: Fluency.Execution.Parsing.Exceptions.ParseException
  langs:
  - csharp
  - vb
  name: ParseException(String, Object[])
  nameWithType: ParseException.ParseException(String, Object[])
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.ParseException(System.String, System.Object[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1860
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  syntax:
    content: public ParseException(string message, params object[] args)
    parameters:
    - id: message
      type: System.String
    - id: args
      type: System.Object[]
    content.vb: Public Sub New(message As String, ParamArray args As Object())
  overload: Fluency.Execution.Parsing.Exceptions.ParseException.#ctor*
  nameWithType.vb: ParseException.ParseException(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fluency.Execution.Parsing.Exceptions.ParseException.ParseException(System.String, System.Object())
  name.vb: ParseException(String, Object())
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.#ctor(System.String,Exception)
  commentId: M:Fluency.Execution.Parsing.Exceptions.ParseException.#ctor(System.String,Exception)
  id: '#ctor(System.String,Exception)'
  parent: Fluency.Execution.Parsing.Exceptions.ParseException
  langs:
  - csharp
  - vb
  name: ParseException(String, Exception)
  nameWithType: ParseException.ParseException(String, Exception)
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.ParseException(System.String, Exception)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1863
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  syntax:
    content: public ParseException(string message, Exception inner)
    parameters:
    - id: message
      type: System.String
    - id: inner
      type: Exception
    content.vb: Public Sub New(message As String, inner As Exception)
  overload: Fluency.Execution.Parsing.Exceptions.ParseException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.Message
  commentId: P:Fluency.Execution.Parsing.Exceptions.ParseException.Message
  id: Message
  parent: Fluency.Execution.Parsing.Exceptions.ParseException
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ParseException.Message
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.Message
  type: Property
  source:
    id: Message
    path: ''
    startLine: 1873
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  syntax:
    content: public override string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Message As String
  overload: Fluency.Execution.Parsing.Exceptions.ParseException.Message*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.ToString
  commentId: M:Fluency.Execution.Parsing.Exceptions.ParseException.ToString
  id: ToString
  parent: Fluency.Execution.Parsing.Exceptions.ParseException
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ParseException.ToString()
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 1878
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Parsing.Exceptions
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Fluency.Execution.Parsing.Exceptions.ParseException.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Fluency.Execution.Parsing.Exceptions
  commentId: N:Fluency.Execution.Parsing.Exceptions
  name: Fluency.Execution.Parsing.Exceptions
  nameWithType: Fluency.Execution.Parsing.Exceptions
  fullName: Fluency.Execution.Parsing.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.LineNumber*
  commentId: Overload:Fluency.Execution.Parsing.Exceptions.ParseException.LineNumber
  name: LineNumber
  nameWithType: ParseException.LineNumber
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.LineNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.Position*
  commentId: Overload:Fluency.Execution.Parsing.Exceptions.ParseException.Position
  name: Position
  nameWithType: ParseException.Position
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.Position
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.Range*
  commentId: Overload:Fluency.Execution.Parsing.Exceptions.ParseException.Range
  name: Range
  nameWithType: ParseException.Range
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.Range
- uid: Range
  isExternal: true
  name: Range
  nameWithType: Range
  fullName: Range
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.Snippet*
  commentId: Overload:Fluency.Execution.Parsing.Exceptions.ParseException.Snippet
  name: Snippet
  nameWithType: ParseException.Snippet
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.Snippet
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.FunctionToken*
  commentId: Overload:Fluency.Execution.Parsing.Exceptions.ParseException.FunctionToken
  name: FunctionToken
  nameWithType: ParseException.FunctionToken
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.FunctionToken
- uid: FunctionToken
  commentId: '!:FunctionToken'
  isExternal: true
  name: FunctionToken
  nameWithType: FunctionToken
  fullName: FunctionToken
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.#ctor*
  commentId: Overload:Fluency.Execution.Parsing.Exceptions.ParseException.#ctor
  name: ParseException
  nameWithType: ParseException.ParseException
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.ParseException
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.Message*
  commentId: Overload:Fluency.Execution.Parsing.Exceptions.ParseException.Message
  name: Message
  nameWithType: ParseException.Message
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.Message
- uid: Fluency.Execution.Parsing.Exceptions.ParseException.ToString*
  commentId: Overload:Fluency.Execution.Parsing.Exceptions.ParseException.ToString
  name: ToString
  nameWithType: ParseException.ToString
  fullName: Fluency.Execution.Parsing.Exceptions.ParseException.ToString
