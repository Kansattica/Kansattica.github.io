### YamlMime:ManagedReference
items:
- uid: Fluency.Execution.Functions.BuiltIn.Dup
  commentId: T:Fluency.Execution.Functions.BuiltIn.Dup
  id: Dup
  parent: Fluency.Execution.Functions.BuiltIn
  children:
  - Fluency.Execution.Functions.BuiltIn.Dup.Bottom
  - Fluency.Execution.Functions.BuiltIn.Dup.DoQueueing(Queue{Fluency.Execution.Functions.Value},Queue{Fluency.Execution.Functions.Value})
  - Fluency.Execution.Functions.BuiltIn.Dup.Name
  - Fluency.Execution.Functions.BuiltIn.Dup.Top
  - Fluency.Execution.Functions.BuiltIn.Dup.TopInput
  langs:
  - csharp
  - vb
  name: Dup
  nameWithType: Dup
  fullName: Fluency.Execution.Functions.BuiltIn.Dup
  type: Class
  source:
    id: Dup
    path: ''
    startLine: 989
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Functions.BuiltIn
  summary: "\nReads a value from the top input and puts it on both top and bottom outputs.\n"
  example: []
  syntax:
    content: 'public class Dup : ITopIn, ITopOut, IBottomOut, IFunction'
    content.vb: >-
      Public Class Dup
          Implements ITopIn, ITopOut, IBottomOut, IFunction
  inheritance:
  - System.Object
  derivedClasses:
  - Fluency.Execution.Functions.BuiltIn.Duplicate
  implements:
  - Fluency.Execution.Functions.ITopIn
  - Fluency.Execution.Functions.ITopOut
  - Fluency.Execution.Functions.IBottomOut
  - Fluency.Execution.Functions.IFunction
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fluency.Execution.Functions.BuiltIn.Dup.Name
  commentId: P:Fluency.Execution.Functions.BuiltIn.Dup.Name
  id: Name
  parent: Fluency.Execution.Functions.BuiltIn.Dup
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Dup.Name
  fullName: Fluency.Execution.Functions.BuiltIn.Dup.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 991
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: public virtual string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Name As String
  overload: Fluency.Execution.Functions.BuiltIn.Dup.Name*
  implements:
  - Fluency.Execution.Functions.IFunction.Name
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Fluency.Execution.Functions.BuiltIn.Dup.TopInput
  commentId: P:Fluency.Execution.Functions.BuiltIn.Dup.TopInput
  id: TopInput
  parent: Fluency.Execution.Functions.BuiltIn.Dup
  langs:
  - csharp
  - vb
  name: TopInput
  nameWithType: Dup.TopInput
  fullName: Fluency.Execution.Functions.BuiltIn.Dup.TopInput
  type: Property
  source:
    id: TopInput
    path: ''
    startLine: 993
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: public GetNext TopInput { set; }
    parameters: []
    return:
      type: Fluency.Execution.Functions.GetNext
    content.vb: Public WriteOnly Property TopInput As GetNext
  overload: Fluency.Execution.Functions.BuiltIn.Dup.TopInput*
  implements:
  - Fluency.Execution.Functions.ITopIn.TopInput
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: Fluency.Execution.Functions.BuiltIn.Dup.DoQueueing(Queue{Fluency.Execution.Functions.Value},Queue{Fluency.Execution.Functions.Value})
  commentId: M:Fluency.Execution.Functions.BuiltIn.Dup.DoQueueing(Queue{Fluency.Execution.Functions.Value},Queue{Fluency.Execution.Functions.Value})
  id: DoQueueing(Queue{Fluency.Execution.Functions.Value},Queue{Fluency.Execution.Functions.Value})
  parent: Fluency.Execution.Functions.BuiltIn.Dup
  langs:
  - csharp
  - vb
  name: DoQueueing(Queue<Value>, Queue<Value>)
  nameWithType: Dup.DoQueueing(Queue<Value>, Queue<Value>)
  fullName: Fluency.Execution.Functions.BuiltIn.Dup.DoQueueing(Queue<Fluency.Execution.Functions.Value>, Queue<Fluency.Execution.Functions.Value>)
  type: Method
  source:
    id: DoQueueing
    path: ''
    startLine: 998
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: protected Value DoQueueing(Queue<Value> thisQueue, Queue<Value> thatQueue)
    parameters:
    - id: thisQueue
      type: Queue{Fluency.Execution.Functions.Value}
    - id: thatQueue
      type: Queue{Fluency.Execution.Functions.Value}
    return:
      type: Fluency.Execution.Functions.Value
    content.vb: Protected Function DoQueueing(thisQueue As Queue(Of Value), thatQueue As Queue(Of Value)) As Value
  overload: Fluency.Execution.Functions.BuiltIn.Dup.DoQueueing*
  nameWithType.vb: Dup.DoQueueing(Queue(Of Value), Queue(Of Value))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Fluency.Execution.Functions.BuiltIn.Dup.DoQueueing(Queue(Of Fluency.Execution.Functions.Value), Queue(Of Fluency.Execution.Functions.Value))
  name.vb: DoQueueing(Queue(Of Value), Queue(Of Value))
- uid: Fluency.Execution.Functions.BuiltIn.Dup.Top
  commentId: M:Fluency.Execution.Functions.BuiltIn.Dup.Top
  id: Top
  parent: Fluency.Execution.Functions.BuiltIn.Dup
  langs:
  - csharp
  - vb
  name: Top()
  nameWithType: Dup.Top()
  fullName: Fluency.Execution.Functions.BuiltIn.Dup.Top()
  type: Method
  source:
    id: Top
    path: ''
    startLine: 1015
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: public Value Top()
    return:
      type: Fluency.Execution.Functions.Value
    content.vb: Public Function Top As Value
  overload: Fluency.Execution.Functions.BuiltIn.Dup.Top*
  implements:
  - Fluency.Execution.Functions.ITopOut.Top
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fluency.Execution.Functions.BuiltIn.Dup.Bottom
  commentId: M:Fluency.Execution.Functions.BuiltIn.Dup.Bottom
  id: Bottom
  parent: Fluency.Execution.Functions.BuiltIn.Dup
  langs:
  - csharp
  - vb
  name: Bottom()
  nameWithType: Dup.Bottom()
  fullName: Fluency.Execution.Functions.BuiltIn.Dup.Bottom()
  type: Method
  source:
    id: Bottom
    path: ''
    startLine: 1017
  assemblies:
  - cs.temp.dll
  namespace: Fluency.Execution.Functions.BuiltIn
  syntax:
    content: public Value Bottom()
    return:
      type: Fluency.Execution.Functions.Value
    content.vb: Public Function Bottom As Value
  overload: Fluency.Execution.Functions.BuiltIn.Dup.Bottom*
  implements:
  - Fluency.Execution.Functions.IBottomOut.Bottom
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fluency.Execution.Functions.BuiltIn
  commentId: N:Fluency.Execution.Functions.BuiltIn
  name: Fluency.Execution.Functions.BuiltIn
  nameWithType: Fluency.Execution.Functions.BuiltIn
  fullName: Fluency.Execution.Functions.BuiltIn
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Fluency.Execution.Functions.ITopIn
  commentId: T:Fluency.Execution.Functions.ITopIn
  parent: Fluency.Execution.Functions
  name: ITopIn
  nameWithType: ITopIn
  fullName: Fluency.Execution.Functions.ITopIn
- uid: Fluency.Execution.Functions.ITopOut
  commentId: T:Fluency.Execution.Functions.ITopOut
  parent: Fluency.Execution.Functions
  name: ITopOut
  nameWithType: ITopOut
  fullName: Fluency.Execution.Functions.ITopOut
- uid: Fluency.Execution.Functions.IBottomOut
  commentId: T:Fluency.Execution.Functions.IBottomOut
  parent: Fluency.Execution.Functions
  name: IBottomOut
  nameWithType: IBottomOut
  fullName: Fluency.Execution.Functions.IBottomOut
- uid: Fluency.Execution.Functions.IFunction
  commentId: T:Fluency.Execution.Functions.IFunction
  parent: Fluency.Execution.Functions
  name: IFunction
  nameWithType: IFunction
  fullName: Fluency.Execution.Functions.IFunction
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fluency.Execution.Functions
  commentId: N:Fluency.Execution.Functions
  name: Fluency.Execution.Functions
  nameWithType: Fluency.Execution.Functions
  fullName: Fluency.Execution.Functions
- uid: Fluency.Execution.Functions.BuiltIn.Dup.Name*
  commentId: Overload:Fluency.Execution.Functions.BuiltIn.Dup.Name
  name: Name
  nameWithType: Dup.Name
  fullName: Fluency.Execution.Functions.BuiltIn.Dup.Name
- uid: Fluency.Execution.Functions.IFunction.Name
  commentId: P:Fluency.Execution.Functions.IFunction.Name
  parent: Fluency.Execution.Functions.IFunction
  name: Name
  nameWithType: IFunction.Name
  fullName: Fluency.Execution.Functions.IFunction.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fluency.Execution.Functions.BuiltIn.Dup.TopInput*
  commentId: Overload:Fluency.Execution.Functions.BuiltIn.Dup.TopInput
  name: TopInput
  nameWithType: Dup.TopInput
  fullName: Fluency.Execution.Functions.BuiltIn.Dup.TopInput
- uid: Fluency.Execution.Functions.ITopIn.TopInput
  commentId: P:Fluency.Execution.Functions.ITopIn.TopInput
  parent: Fluency.Execution.Functions.ITopIn
  name: TopInput
  nameWithType: ITopIn.TopInput
  fullName: Fluency.Execution.Functions.ITopIn.TopInput
- uid: Fluency.Execution.Functions.GetNext
  commentId: T:Fluency.Execution.Functions.GetNext
  parent: Fluency.Execution.Functions
  name: GetNext
  nameWithType: GetNext
  fullName: Fluency.Execution.Functions.GetNext
- uid: Fluency.Execution.Functions.BuiltIn.Dup.DoQueueing*
  commentId: Overload:Fluency.Execution.Functions.BuiltIn.Dup.DoQueueing
  name: DoQueueing
  nameWithType: Dup.DoQueueing
  fullName: Fluency.Execution.Functions.BuiltIn.Dup.DoQueueing
- uid: Queue{Fluency.Execution.Functions.Value}
  commentId: '!:Queue{Fluency.Execution.Functions.Value}'
  definition: Queue`1
  name: Queue<Value>
  nameWithType: Queue<Value>
  fullName: Queue<Fluency.Execution.Functions.Value>
  nameWithType.vb: Queue(Of Value)
  fullName.vb: Queue(Of Fluency.Execution.Functions.Value)
  name.vb: Queue(Of Value)
  spec.csharp:
  - uid: Queue`1
    name: Queue
    nameWithType: Queue
    fullName: Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fluency.Execution.Functions.Value
    name: Value
    nameWithType: Value
    fullName: Fluency.Execution.Functions.Value
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Queue`1
    name: Queue
    nameWithType: Queue
    fullName: Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fluency.Execution.Functions.Value
    name: Value
    nameWithType: Value
    fullName: Fluency.Execution.Functions.Value
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Functions.Value
  commentId: T:Fluency.Execution.Functions.Value
  parent: Fluency.Execution.Functions
  name: Value
  nameWithType: Value
  fullName: Fluency.Execution.Functions.Value
- uid: Queue`1
  isExternal: true
  name: Queue<>
  nameWithType: Queue<>
  fullName: Queue<>
  nameWithType.vb: Queue(Of )
  fullName.vb: Queue(Of )
  name.vb: Queue(Of )
  spec.csharp:
  - uid: Queue`1
    name: Queue
    nameWithType: Queue
    fullName: Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Queue`1
    name: Queue
    nameWithType: Queue
    fullName: Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Functions.BuiltIn.Dup.Top*
  commentId: Overload:Fluency.Execution.Functions.BuiltIn.Dup.Top
  name: Top
  nameWithType: Dup.Top
  fullName: Fluency.Execution.Functions.BuiltIn.Dup.Top
- uid: Fluency.Execution.Functions.ITopOut.Top
  commentId: M:Fluency.Execution.Functions.ITopOut.Top
  parent: Fluency.Execution.Functions.ITopOut
  name: Top()
  nameWithType: ITopOut.Top()
  fullName: Fluency.Execution.Functions.ITopOut.Top()
  spec.csharp:
  - uid: Fluency.Execution.Functions.ITopOut.Top
    name: Top
    nameWithType: ITopOut.Top
    fullName: Fluency.Execution.Functions.ITopOut.Top
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fluency.Execution.Functions.ITopOut.Top
    name: Top
    nameWithType: ITopOut.Top
    fullName: Fluency.Execution.Functions.ITopOut.Top
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fluency.Execution.Functions.BuiltIn.Dup.Bottom*
  commentId: Overload:Fluency.Execution.Functions.BuiltIn.Dup.Bottom
  name: Bottom
  nameWithType: Dup.Bottom
  fullName: Fluency.Execution.Functions.BuiltIn.Dup.Bottom
- uid: Fluency.Execution.Functions.IBottomOut.Bottom
  commentId: M:Fluency.Execution.Functions.IBottomOut.Bottom
  parent: Fluency.Execution.Functions.IBottomOut
  name: Bottom()
  nameWithType: IBottomOut.Bottom()
  fullName: Fluency.Execution.Functions.IBottomOut.Bottom()
  spec.csharp:
  - uid: Fluency.Execution.Functions.IBottomOut.Bottom
    name: Bottom
    nameWithType: IBottomOut.Bottom
    fullName: Fluency.Execution.Functions.IBottomOut.Bottom
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fluency.Execution.Functions.IBottomOut.Bottom
    name: Bottom
    nameWithType: IBottomOut.Bottom
    fullName: Fluency.Execution.Functions.IBottomOut.Bottom
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
